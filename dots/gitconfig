#
# Global Git Configuration
#

[alias]
    # Branch
    b = branch

    ## checkout/fetch/merge/push/rebase

    # clone
    clone = clone --recursive

    # checkout
    co = checkout
    co0 = checkout HEAD --

    # fetch
    f = fetch

    # merge
    m = merge
    mom = merge origin/master

    # push
    p = push
    pa = push --all
    pt = push --tags

    # rebase
    r = rebase

    # commit
    c = commit -v
    cm = commit --message

    # diff
    d = diff
    ds = diff --staged
    dh = diff HEAD

    # log
    l   = log --topo-order --pretty=format:'%C(yellow)%h %C(cyan)%cn %C(blue)%cr%C(reset) %s'
    ls  = log --topo-order --stat --pretty=format:'%C(bold)%C(yellow)Commit:%C(reset) %C(yellow)%H%C(red)%d%n%C(bold)%C(yellow)Author:%C(reset) %C(cyan)%an <%ae>%n%C(bold)%C(yellow)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B'
    ld  = log --topo-order --stat --patch --full-diff --pretty=format:'%C(bold)%C(yellow)Commit:%C(reset) %C(yellow)%H%C(red)%d%n%C(bold)%C(yellow)Author:%C(reset) %C(cyan)%an <%ae>%n%C(bold)%C(yellow)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B'
    lg  = log --topo-order --all --graph --pretty=format:'%C(yellow)%h%C(reset) %s %C(red)%d%C(reset)%n'
    lga = log --topo-order --all --graph --pretty=format:'%C(yellow)%h %C(cyan)%cn%C(reset) %s %C(red)%d%C(reset)%n'
    lm  = log --topo-order --pretty=format:'%s'
    lh  = shortlog --summary --numbered
    llf = fsck --lost-found
    hist = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
    #hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short

    # status
    st = status -sb

    # stash
    stashdiff = stash show -u

    # others
    type = cat-file -t
    undopush = push -f origin HEAD^:master
    unstage = reset HEAD
    uncommit = reset --soft HEAD~1
    wdiff = diff --word-diff

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix

[branch]
    #autosetupmerge = trus

# Use `origin` as the default remote on the `master` branch in all cases
[branch "master"]
	remote = origin
	merge = refs/heads/master

[core]
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes
    # Treat certain kinds of whitespace as errors
    whitespace = fix,-indent-with-non-tab,cr-at-eol,space-before-tab,trailing-space
    pager = less -FXRS -x2

[color]
    diff = auto
    status = auto
    interactive = auto
    ui = true
    pager = true

[color "branch"]
	current = yellow
	local = normal
	remote = red

[color "diff"]
    plain = normal
    #meta = yellow bold
    old = red
    new = green
    commit = yellow
    whitespace = normal red

[color "status"]
    header = normal
    updated = yellow
	changed = cyan
	untracked = red
    nobranch = red

[help]
    autocorrect = 1

[init]
    templatedir = "~/.gittemplate"

[push]
    default = current

# URL shorthands
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
	insteadOf = "github:"
[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
	insteadOf = "gist:"
[user]
	name = Chris Streeter
	email = chris@chrisstreeter.com
[heroku]
	account = personal
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[diff]
	tool = Kaleidoscope
[difftool]
	prompt = false
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
[mergetool]
	prompt = false
[merge]
	tool = Kaleidoscope
