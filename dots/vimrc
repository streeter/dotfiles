" VIM
" ===

" Use VIM commands; don't bother with VI compatibiilty
set nocompatible

"
" LAUNCH CONFIG
" =============

" Enable loading filetype and indentation plugins
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Install Vundle bundles
source ~/.vimrc.bundles


"
" SYNTAX
" ======
syntax on
syntax enable                               " Enable syntax processing
set t_Co=256


"
" GENERAL CONFIG
" ==============
let mapleader = ','
set autoread                                    " Watch for file changes by other programs
set autowrite                                   " Write contents of the file, if it has been modified, on buffer exit
set clipboard=unnamed                           " Yank and paste with the system clipboard
set cmdheight=2                                 " Display 2 lines for the command line height
set completeopt=menu,longest,preview            " Insert mode completion options
set directory-=.                                " Don't store swapfiles in the current directory
set encoding=utf-8                              " Use UTF-8 as the default buffer encoding
set history=500                                 " Remember up to N 'colon' commmands and search patterns
set laststatus=2                                " Always show status line, even for one window
set list                                        " Show trailing whitespace
set listchars=tab:▸\ ,trail:▫
set matchtime=2                                 " Jump to matching bracket for 2/10th of a second (works with showmatch)
set more                                        " Display the 'more' prompt
set ruler                                       " Show line, column number, and relative position within a file in the status line
set t_RV=                                       " Don't request terminal version string (for xterm)


"
" MOUSE
" =====
set ttyfast                                 " Send more characters for redraws

" Enable basic mouse behavior such as resizing buffers.
set mouse=a                                 " Enable mouse for use in all modes
if exists('$TMUX')                          " Support resizing in tmux
  set ttymouse=xterm2
endif


"
" SEARCHING
" =========
set incsearch                               " Enable incremental search
set hlsearch                                " Highlight the results of a search
set ignorecase                              " Case-insensitive search
set smartcase                               " Case-sensitive search if any caps
" Turn off search highlighting
nnoremap <leader>/      :nohlsearch<CR>


"
" SWAP FILES
" ==========
set noswapfile
set nobackup                                    " Do not produce backup files
set nowritebackup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp


"
" UNDOING
" =======
set undolevels=1000                             " Lots of undo history

" Keep undo history across sessions, by storing in file
" Only works in MacVim (gui) mode
if has('gui_running')
  set undodir=~/.vim/backups
  set undofile
  " Hide the toolbar
  set guioptions-=T
endif


"
" INDENTATION AND DISPLAY
" =======================
set autoindent
set smartindent
set smarttab
set shiftwidth=4                            " Use 4 spaces for (auto)indent
set softtabstop=4                           " Number of spaces in tab when editing
set tabstop=4                               " Use 4 spaces for <Tab> and :retab
set expandtab                               " Use spaces instead of tabs
set shiftround                              " Round indent to multiple of 'shiftwidth' for > and < commands
set backspace=indent,eol,start              " Allow backspacing over everything

filetype plugin on
filetype indent on

set list listchars=tab:\ \ ,trail:·         " Display tabs and trailing spaces visually
set nowrap                                  " Don't wrap lines
set linebreak                               " Wrap lines at convenient points

set formatoptions=tcqnl


"
" FOLDING
" =======
set foldmethod=indent                       " Fold based on indent
set foldenable                              " Enable folding
set foldlevelstart=5                        " Open most folds by default
set foldnestmax=5                           " Maximum fold levels


"
" COMPLETION
" ==========
set wildmode=list,full
set wildmenu                                " Enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc,.*,*.obj,*~
set wildchar=<Tab> wildmenu wildmode=list,full


"
" SCROLLING
" =========
set scrolloff=3                             " Scroll when cursor gets within 3 characters of top/bottom edge
set sidescrolloff=15
set sidescroll=2


"
" STATUS LINE
" ===========
"set statusline=                                 " Override default
"set statusline+=%{fugitive#statusline()[4:-2]}  " Show fugitive git info
"set statusline+=\ %f\ %m\ %r                    " Show filename/path
"set statusline+=%=                              " Set right-side status info after this line
"set statusline+=%l/%L:%v                        " Set <line number>/<total lines>:<column>
"set statusline+=\                               " Set ending space


"
" COLORSCHEME
" ===========

" Solarized color scheme
colorscheme solarized
let g:solarized_termcolors=256
set background=light                        " Tell solarized to use a light background

" colorscheme badwolf                       " https://github.com/sjl/badwolf/
let g:badwolf_tabline = 2                   " Make the tab line lighter than the background.
let g:badwolf_css_props_highlight = 1       " Turn on CSS properties highlighting

"highlight LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=None gui=NONE guifg=DarkGrey guibg=gray13

" Folding highlight
"hi Folded guibg=gray20 ctermbg=blue ctermfg=white cterm=bold


"
" UI CONFIG
" =========
set number                                  " Show line numbers
set numberwidth=1
set showcmd                                 " Show (partial) commands (or size of selection in Visual mode) in the status line
set showmode                                " Show current mode down on the bottom
set cursorline                              " Highlight the current line
set visualbell                              " Use a visual beep
set showmatch                               " When a bracket is inserted, briefly jump to a matching one

"if has("gui_running")
"  " Set the font to use
"  if has("gui_gtk2")
"    set guifont=Courier\ 10\ Pitch\ 9
"  elseif has("x11")
"    set guifont=-*-courier-medium-r-normal-*-*-180-*-*-m-*-*
"  else
"    set guifont=Courier_New:h12:cDEFAULT
"  endif
"
"  if $HOME == '/Users/streeter'
"    set guifont=Courier\ New\ Bold\ 11
"  endif
"endif


"
" Plugin overrides
"
source ~/.vim/common.vim
source ~/.vim/autocmd.vim
source ~/.vim/plugins.vim


" Highlight words to avoid in tech writing
" ========================================
"
"   obviously, basically, simply, of course, clearly,
"   just, everyone knows, However, So, easy

"   http://css-tricks.com/words-avoid-educational-writing/

highlight TechWordsToAvoid ctermbg=red ctermfg=white

"
" End .vimrc
" ==========
