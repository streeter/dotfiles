#!/bin/sh

# To use Apple's rsync switch commented lines below
# To use rsyncx:
#RSYNC="/usr/local/bin/rsync --eahfs"
# To use built-in rsync (OS X 10.4 and later):
RSYNC="/usr/bin/rsync"

# sudo runs the backup as root
# --eahfs enables HFS+ mode
# -a turns on archive mode (recursive copy + retain attributes)
# -x don't cross device boundaries (ignore mounted volumes)
# -S handle sparse files efficiently
# --showtogo shows the number of files left to process
# --delete deletes any files that have been deleted locally
# $* expands to any extra command line options you may give

OPTIONS="-axS --delete --cvs-exclude --exclude-from /Users/streeter/bin/backup_excludes_music.txt"

# Source location
SRC_MUSIC_DIR="/Users/streeter/Music/iTunes/"

# Destination location
DST_MUSIC_DIR="/export/music"

# Setup the destination
SERVER="scout.local"
DST_MUSIC="streeter@$SERVER:$DST_MUSIC_DIR"

function backup_with_rsync {
	echo
	echo "--progress, --stats give more info."
	#echo "Run with -E to copy resource forks too."

	CMD="$RSYNC $OPTIONS $* $SRC_MUSIC_DIR $DST_MUSIC"
	
	echo
	echo "RUNNING: $CMD"
	
	$CMD
}

# Figure out if we can access the server
if /sbin/ping -c 1 $SERVER > /dev/null
then
	#echo "Server accessible, continuing backup."
	
	backup_with_rsync $*
	
else
	echo "ERROR: server not accessible."
fi

